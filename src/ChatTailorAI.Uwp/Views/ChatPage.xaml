<Page
    x:Class="ChatTailorAI.Uwp.Views.ChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ChatTailorAI.Uwp.Behaviors"
    xmlns:chatModels="using:ChatTailorAI.Shared.Models.Chat"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:ChatTailorAI.Uwp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:ChatTailorAI.Uwp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:selectors="using:ChatTailorAI.Uwp.Selectors"
    xmlns:viewmodels="using:ChatTailorAI.Shared.ViewModels"
    x:Name="MainView"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    Loaded="MainView_Loaded"
    NavigationCacheMode="Disabled"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToInverseVisibilityConverter x:Key="BooleanToInverseVisibilityConverter" />
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:NotFunctionToVisibilityConverter x:Key="NotFunctionToVisibilityConverter" />
        <converters:ChatImageMessageToVisibilityConverter x:Key="ChatImageMessageToVisibilityConverter" />
        <converters:CollectionEmptyToVisibilityConverter x:Key="CollectionEmptyToVisibilityConverter" />
        <converters:FilePathToImageSourceConverter x:Key="FilePathToImageSourceConverter" />
        <converters:ImageSourceConverter x:Key="ImageSourceConverter" />

        <selectors:BotMessageDataTemplateSelector
            x:Key="BotMessageDataTemplateSelector"
            BotMessageWithImageTemplate="{StaticResource BotMessageWithImageTemplate}"
            BotMessageWithoutImageTemplate="{StaticResource BotMessageWithoutImageTemplate}" />
        <selectors:UserMessageDataTemplateSelector
            x:Key="UserMessageDataTemplateSelector"
            UserMessageWithImageTemplate="{StaticResource UserMessageWithImageTemplate}"
            UserMessageWithoutImageTemplate="{StaticResource UserMessageWithoutImageTemplate}" />

        <DataTemplate x:Key="UserMessageWithoutImageTemplate">
            <Grid>
                <Border
                    Margin="5"
                    Padding="10"
                    HorizontalAlignment="Right"
                    Background="#FF0078D4"
                    CornerRadius="10">
                    <TextBlock
                        Foreground="White"
                        IsTextSelectionEnabled="True"
                        SelectionHighlightColor="Gray"
                        Text="{Binding Content}"
                        TextWrapping="Wrap" />
                </Border>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="UserMessageWithImageTemplate">
            <Grid>
                <Border
                    Margin="5"
                    Padding="10,10,10,0"
                    HorizontalAlignment="Right"
                    Background="#FF0078D4"
                    CornerRadius="10">
                    <StackPanel Margin="5,0,0,0">
                        <TextBlock
                            Foreground="White"
                            IsTextSelectionEnabled="True"
                            SelectionHighlightColor="Gray"
                            Text="{Binding Content}"
                            TextWrapping="Wrap" />
                        <Grid Visibility="{Binding IsImageMessage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <GridView
                                x:Name="imagesGridView"
                                Margin="0,10,0,0"
                                ItemsSource="{Binding Images}"
                                SelectionMode="None">
                                <GridView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Image
                                                MaxWidth="300"
                                                MaxHeight="300"
                                                Source="{Binding LocalUri}"
                                                Stretch="Uniform" />
                                            <Image
                                                MaxWidth="300"
                                                MaxHeight="300"
                                                Source="{Binding Url}"
                                                Stretch="Uniform" />
                                        </Grid>
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="BotMessageWithoutImageTemplate" x:DataType="viewmodels:ChatMessageViewModel">
            <Grid Visibility="{x:Bind Role, Mode=OneWay, Converter={StaticResource NotFunctionToVisibilityConverter}}">
                <Border
                    Margin="5"
                    Padding="10"
                    HorizontalAlignment="Left"
                    Background="{StaticResource SystemChromeMediumHighColor}"
                    CornerRadius="10">
                    <StackPanel Margin="5">
                        <TextBlock
                            Foreground="White"
                            IsTextSelectionEnabled="True"
                            Text="{x:Bind Content, Mode=OneWay}"
                            TextWrapping="Wrap"
                            Visibility="{x:Bind Content, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BotMessageWithImageTemplate">
            <Grid>
                <Border
                    Margin="5"
                    Padding="10"
                    HorizontalAlignment="Left"
                    Background="{StaticResource SystemChromeMediumHighColor}"
                    CornerRadius="10">
                    <StackPanel Margin="5">
                        <TextBlock
                            Foreground="White"
                            IsTextSelectionEnabled="True"
                            Text="{Binding Content}"
                            TextWrapping="Wrap"
                            Visibility="{Binding Content, Converter={StaticResource NullToVisibilityConverter}}" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid
                                Grid.Row="0"
                                Margin="0,8,0,12"
                                Visibility="{Binding IsImagesEmpty, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock
                                    Margin="0,0,0,8"
                                    Text="⚠️ Images Unavailable"
                                    Visibility="{Binding IsTypingMessage, Converter={StaticResource BooleanToInverseVisibilityConverter}}" />
                            </Grid>
                            <Grid Grid.Row="1" Visibility="{Binding IsImagesEmpty, Converter={StaticResource BooleanToInverseVisibilityConverter}}">
                                <GridView
                                    x:Name="imagesGridView"
                                    Margin="0,8,0,0"
                                    ItemsSource="{Binding Images}"
                                    SelectionMode="Multiple"
                                    Visibility="{Binding IsImageMessage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <interactivity:Interaction.Behaviors>
                                        <behaviors:GridViewSelectedItemsBehavior SelectedItems="{Binding Path=ChatViewModel.SelectedImages, Mode=TwoWay, ElementName=MainView}" />
                                    </interactivity:Interaction.Behaviors>
                                    <GridView.ItemTemplate>
                                        <DataTemplate>
                                            <Image
                                                MaxWidth="315"
                                                MaxHeight="315"
                                                Source="{Binding LocalUri}"
                                                Stretch="UniformToFill" />
                                        </DataTemplate>
                                    </GridView.ItemTemplate>
                                </GridView>
                            </Grid>
                        </Grid>

                        <Button
                            Command="{Binding Path=ChatViewModel.SavePhotosCommand, ElementName=MainView}"
                            Content="Save Selected"
                            Visibility="{Binding IsImageMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BotMessageTemplate">
            <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource BotMessageDataTemplateSelector}" />
        </DataTemplate>

        <DataTemplate x:Key="UserMessageTemplate">
            <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource UserMessageDataTemplateSelector}" />
        </DataTemplate>

        <selectors:ChatMessageTemplateSelector
            x:Key="ChatMessageTemplateSelector"
            BotMessageTemplate="{StaticResource BotMessageTemplate}"
            UserMessageTemplate="{StaticResource UserMessageTemplate}" />

        <Style x:Key="MessageListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
    </Page.Resources>
    <Grid CornerRadius="12" RequestedTheme="Dark">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <muxc:WebView2
            x:Name="webView"
            Grid.Row="0"
            Grid.RowSpan="2"
            Margin="0,4,0,0"
            Canvas.ZIndex="1"
            NavigationStarting="WebView_NavigationStarting"
            Visibility="{x:Bind ChatViewModel.IsAuthWindowVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <!--  Header  -->
        <Grid Grid.Row="0" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="8,0,0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <ComboBox
                        x:Name="modeComboBox"
                        VerticalAlignment="Center"
                        BorderThickness="0.5"
                        CornerRadius="4"
                        ItemsSource="{Binding Modes}"
                        SelectedItem="{Binding SelectedMode, Mode=TwoWay}"
                        ToolTipService.ToolTip="Mode"
                        Visibility="{x:Bind ChatViewModel.IsAssistantChat, Mode=OneWay, Converter={StaticResource BooleanToInverseVisibilityConverter}}" />

                </StackPanel>
                <!--<Grid
                    Grid.Column="1"
                    Margin="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock
                        HorizontalAlignment="Center"
                        Foreground="LightGray"
                        Text="{x:Bind ChatViewModel.CurrentConversation.Title, Mode=OneWay}" />
                </Grid>-->
                <Grid
                    Grid.Column="2"
                    Margin="0"
                    HorizontalAlignment="Right">
                    <CommandBar
                        DefaultLabelPosition="Right"
                        IsOpen="False"
                        IsSticky="False">
                        <AppBarButton
                            Click="PiPButton_Click"
                            Label="Overlay"
                            ToolTipService.ToolTip="Picture-in-picture">
                            <AppBarButton.Icon>
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8A7;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <CommandBar.SecondaryCommands>
                            <AppBarButton
                                Command="{x:Bind ChatViewModel.EditChatCommand}"
                                Icon="Setting"
                                Label="Settings">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="I" Modifiers="Control" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <!--<AppBarButton
                                Command="{x:Bind ChatViewModel.DeleteMessagesCommand}"
                                Icon="Delete"
                                Label="Delete Messages"
                                ToolTipService.ToolTip="Delete messages">
                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="Delete" />
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>-->
                            <AppBarSeparator />
                            <!--<AppBarButton
                                Click="importButton_Click"
                                Label="Import Messages"
                                ToolTipService.ToolTip="Import Chat">
                                <AppBarButton.Icon>
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE8B5;" />
                                </AppBarButton.Icon>
                            </AppBarButton>-->
                            <AppBarButton
                                Click="exportButton_Click"
                                Label="Export Chat"
                                ToolTipService.ToolTip="Export Chat">
                                <AppBarButton.Icon>
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xEDE2;" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar.SecondaryCommands>
                    </CommandBar>
                    <!--<Button
                        HorizontalAlignment="Right"
                        Background="Transparent"
                        BorderThickness="0"
                        Click="Button_Click"
                        CornerRadius="4"
                        ToolTipService.ToolTip="Settings">
                        <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE115;" />
                    </Button>-->
                </Grid>
            </Grid>

        </Grid>

        <Grid Grid.Row="1" Margin="0,0,0,8">
            <ListView
                x:Name="ChatListView"
                Margin="10,0,10,0"
                ContainerContentChanging="ChatListView_ContainerContentChanging"
                IsItemClickEnabled="True"
                ItemTemplateSelector="{StaticResource ChatMessageTemplateSelector}"
                ItemsSource="{x:Bind ChatViewModel.Messages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <interactivity:Interaction.Behaviors>
                    <behaviors:ListViewFlyoutBehavior
                        CopyMessageCommand="{Binding ElementName=MainView, Path=ChatViewModel.CopyMessageCommand}"
                        CopyToPromptCommand="{Binding ElementName=MainView, Path=ChatViewModel.CopyToPromptCommand}"
                        DeleteMessageCommand="{Binding ElementName=MainView, Path=ChatViewModel.DeleteMessageCommand}" />
                </interactivity:Interaction.Behaviors>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="FlyoutBase.AttachedFlyout">
                            <Setter.Value>
                                <MenuFlyout>
                                    <MenuFlyoutItem
                                        Command="{Binding ElementName=DeleteButton, Path=Command}"
                                        CommandParameter="{Binding}"
                                        Text="Delete" />
                                    <MenuFlyoutItem
                                        Command="{Binding ElementName=CopyButton, Path=Command}"
                                        CommandParameter="{Binding}"
                                        Text="Copy to clipboard" />
                                    <MenuFlyoutItem
                                        Command="{Binding ElementName=CopyToPromptButton, Path=Command}"
                                        CommandParameter="{Binding}"
                                        Text="Copy to prompt" />
                                </MenuFlyout>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Resources>
                    <Button
                        x:Name="DeleteButton"
                        Command="{Binding ElementName=MainView, Path=ChatViewModel.DeleteMessageCommand}"
                        Visibility="Collapsed" />
                    <Button
                        x:Name="CopyButton"
                        Command="{Binding ElementName=MainView, Path=ChatViewModel.CopyMessageCommand}"
                        Visibility="Collapsed" />
                    <Button
                        x:Name="CopyToPromptButton"
                        Command="{Binding ElementName=MainView, Path=ChatViewModel.CopyToPromptCommand}"
                        Visibility="Collapsed" />
                </ListView.Resources>
            </ListView>
        </Grid>

        <Grid
            Grid.Row="2"
            Margin="8,6,0,0"
            VerticalAlignment="Center"
            Visibility="{x:Bind ChatViewModel.AttachedImages, Mode=OneWay, Converter={StaticResource CollectionEmptyToVisibilityConverter}}">
            <Grid.ColumnDefinitions />
            <GridView
                Grid.Column="0"
                VerticalAlignment="Center"
                ItemsSource="{x:Bind ChatViewModel.AttachedImages, Mode=OneWay}">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Image
                                MaxWidth="50"
                                MaxHeight="50"
                                Source="{Binding}"
                                Stretch="UniformToFill" />
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </Grid>

        <Grid
            x:Name="InputGrid"
            Grid.Row="3"
            MaxHeight="150"
            Margin="8,0,8,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox
                    x:Name="InputTextBox"
                    Grid.Column="0"
                    AcceptsReturn="True"
                    AutomationProperties.Name="multi-line TextBox"
                    BorderThickness="0"
                    CornerRadius="4"
                    Foreground="White"
                    PlaceholderForeground="Gray"
                    PlaceholderText="Type a message"
                    PreviewKeyDown="InputTextBox_PreviewKeyDown"
                    Text="{x:Bind ChatViewModel.UserInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap" />

                <Button
                    x:Name="SendStopButton"
                    Grid.Column="1"
                    Margin="10,0,0,0"
                    Command="{x:Bind ChatViewModel.CurrentCommand, Mode=OneWay}"
                    CornerRadius="4"
                    IsEnabled="{x:Bind ChatViewModel.IsRecording, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}">
                    <FontIcon
                        HorizontalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"
                        Glyph="{x:Bind ChatViewModel.CurrentIcon, Mode=OneWay}" />
                </Button>

                <Button
                    x:Name="UploadImageButton"
                    Grid.Column="2"
                    Margin="10,0,0,0"
                    CornerRadius="4"
                    Visibility="{x:Bind ChatViewModel.CurrentModelSupportsVision, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <FontIcon
                        HorizontalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"
                        Glyph="{x:Bind ChatViewModel.CurrentUploadIcon, Mode=OneWay}" />
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Command="{x:Bind ChatViewModel.AttachImageCommand, Mode=OneWay}" Text="Upload">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE898;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem Command="{x:Bind ChatViewModel.AttachImageFromClipboardCommand}" Text="Paste">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE77F;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>

                </Button>

                <Button
                    x:Name="RecordButton"
                    Grid.Column="3"
                    Margin="10,0,0,0"
                    Command="{x:Bind ChatViewModel.RecordCommand, Mode=OneWay}"
                    CornerRadius="4"
                    Visibility="{x:Bind ChatViewModel.IsSpeechToTextEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <FontIcon
                        HorizontalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"
                        Glyph="{x:Bind ChatViewModel.CurrentRecordIcon, Mode=OneWay}" />
                </Button>

            </Grid>

        </Grid>

        <controls:InAppNotification
            x:Name="InAppNotification"
            Width="550"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            x:FieldModifier="public"
            BorderThickness="1"
            FontSize="16"
            ShowDismissButton="True" />
    </Grid>
</Page>
